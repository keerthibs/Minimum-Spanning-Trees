Project Title: Minimum spanning trees
Project Description

Write algorithms for finding minimum spanning trees. You must complete either level one (Prim1, Prim2, Kruskal), or level two (Edmonds' branching algorithm [MST in directed graphs]).
Level 1
Implement 3 algorithms: Prim1 (priority queue of edges; use Java's priority queues), Prim2 (priority queue of vertices, using indexed heaps), and Kruskal's algorithm. Provide 3 driver programs for the 3 algorithms. You can reuse SP0pq code for this project. Output just the weight of the minimum spanning tree.

In the first line of the output, print the weight of a minimum spanning tree. Note that though the edge weights are ints, the weight of an MST may not fit in an int. If |V| is less than or equal to 50, in the next lines, output the edges of an actual MST. Order the edges of the MST by their "To" nodes. If |V| is more than 50, then output just the weight of the MST.
Sample input:
5 7
1 5 8
1 4 7
1 3 6
4 3 3
3 5 6
5 3 2
5 2 1

Output:
17
(5,2)
(4,3)
(1,4)
(3,5)